// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using stu_card_api.StuDbContext;

#nullable disable

namespace stu_card_api.Migrations.StuCard
{
    [DbContext(typeof(StuCardDbContext))]
    [Migration("20240911053025_StuCardV001")]
    partial class StuCardV001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("stu_card_api.Entitys.FileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BuckName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("StuCard.File");
                });

            modelBuilder.Entity("stu_card_api.Entitys.TemplateEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EnSchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SchoolAbbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ZhSchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("StuCard.Template");
                });

            modelBuilder.Entity("stu_card_api.Entitys.TemplateItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("StuCard.TemplateItem");
                });

            modelBuilder.Entity("stu_card_api.Entitys.TemplateItemFabricEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Angle")
                        .HasColumnType("double");

                    b.Property<string>("BackgroundColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("CharSpacing")
                        .HasColumnType("double");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("CropX")
                        .HasColumnType("double");

                    b.Property<double>("CropY")
                        .HasColumnType("double");

                    b.Property<string>("CrossOrigin")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Fill")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FillRule")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Filters")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<bool>("FlipX")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("FlipY")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FontFamily")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("FontSize")
                        .HasColumnType("double");

                    b.Property<string>("FontStyle")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FontWeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GlobalCompositeOperation")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Height")
                        .HasColumnType("double");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("Left")
                        .HasColumnType("double");

                    b.Property<double>("LineHeight")
                        .HasColumnType("double");

                    b.Property<bool>("Linethrough")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("Opacity")
                        .HasColumnType("double");

                    b.Property<string>("OriginX")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OriginY")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Overline")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PaintFirst")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PathAlign")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PathSide")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("PathStartOffset")
                        .HasColumnType("double");

                    b.Property<double>("ScaleX")
                        .HasColumnType("double");

                    b.Property<double>("ScaleY")
                        .HasColumnType("double");

                    b.Property<string>("Shadow")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<double>("SkewX")
                        .HasColumnType("double");

                    b.Property<double>("SkewY")
                        .HasColumnType("double");

                    b.Property<string>("Src")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Stroke")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("StrokeDashArray")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<double>("StrokeDashOffset")
                        .HasColumnType("double");

                    b.Property<string>("StrokeLineCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StrokeLineJoin")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("StrokeMiterLimit")
                        .HasColumnType("double");

                    b.Property<bool>("StrokeUniform")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("StrokeWidth")
                        .HasColumnType("double");

                    b.Property<string>("Styles")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<int>("TemplateEntityItemId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TextAlign")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TextBackgroundColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Top")
                        .HasColumnType("double");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Underline")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Visible")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("Width")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("StuCard.TemplateItemFabric");
                });

            modelBuilder.Entity("stu_card_api.Entitys.TemplateItemShadowEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AffectStroke")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("Blur")
                        .HasColumnType("double");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("NonScaling")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("OffsetX")
                        .HasColumnType("double");

                    b.Property<double>("OffsetY")
                        .HasColumnType("double");

                    b.Property<int>("TemplateEntityItemId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("StuCard.TemplateItemShadow");
                });
#pragma warning restore 612, 618
        }
    }
}
